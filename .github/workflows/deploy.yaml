name: Push-to-EC2

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main
    paths:
      - 'ui/**'

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install npm dependencies
        working-directory: ui
        run: npm install

      - name: Run Build
        working-directory: ui
        run: npm run build

      - name: Run Test
        working-directory: server
        run: echo "npm run Tests Script need to Be Implemented!"

      - name: Show Files
        run: ls ui/

      - name: Deploy to Server 1
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          TARGET: ${{ secrets.UI_TARGET_DIR }}
          SOURCE: "ui/"
          EXCLUDE: "/node-modules/,/node_modules/,/.next/"

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ${{ secrets.UI_TARGET_DIR }}
            npm install --omit=dev

            # Setting ENVs 
            echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" > .env
            echo "NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}" >> .env
            
            npm run build
            pm2 delete next-app || true # Remove the previous app if it exists
            pm2 start --name "next-app" npm -- run start # Use "npm run start"
            pm2 save # Save PM2 process list

            echo "Deployment updated on $(date '+%Y-%m-%d %H:%M:%S') by ${{ github.actor }}" >> ci-info.txt